{
  "name": "Taskwarrior Task",
  "scopeName": "text.taskwarrior.edit",
  "uuid": "14f1056a-e10f-4b7c-900e-41a5b78dcb5c",
  "patterns": [
    {
      "include": "#edit"
    }
  ],
  "repository": {
    "edit": {
      "patterns": [
        {
          "include": "#entryLine"
        },
        {
          "include": "#heading"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#invalidIndentation"
        },
        {
          "include": "#missingSeparator"
        }
      ]
    },
    "annotation": {
      "patterns": [
        {
          "match": "(.*)(\\s--\\s)\\s*(.*)",
          "captures": {
            "1": {
              "name": "meta.section.timestamp",
              "patterns": [
                {
                  "include": "#timestamp"
                }
              ]
            },
            "2": {
              "name": "punctuation.separator.annotation.date"
            },
            "3": {
              "name": "meta.string.annotation.value",
              "patterns": [
                {
                  "include": "#stringValue"
                }
              ]
            }
          }
        },
        {
          "match": ".*",
          "name": "invalid.illegal.annotation"
        }
      ]
    },
    "annotationEntry": {
      "match": "(Annotation:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.annotation",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "name": "meta.section.annotation",
          "patterns": [
            {
              "include": "#annotation"
            }
          ]
        }
      }
    },
    "attributeKeySection": {
      "match": "(?:(UDA)\\s)?([\\S^:#][^:#]+)\\s*(:)",
      "captures": {
        "1": {
          "name": "meta.keyword.uda keyword.other.uda strong.uda"
        },
        "2": {
          "name": "entity.other.attribute-name.task"
        },
        "3": {
          "name": "punctuation.separator.attribute-name.task"
        }
      }
    },
    "comment": {
      "match": "^((#)\\p{Print}*)$",
      "captures": {
        "1": {
          "name": "comment.line.task"
        },
        "2": {
          "name": "punctuation.definition.comment.task"
        }
      }
    },
    "dependencies": {
      "match": "([^,]+)(?:(?!.)|(,)(?=[^,])|(.*))",
      "captures": {
        "1": {
          "name": "meta.section.dependencies.part",
          "patterns": [
            {
              "include": "#uuidRef"
            },
            {
              "include": "#idRange"
            },
            {
              "match": ".*",
              "name": "invalid.illegal.dependencies.part"
            }
          ]
        },
        "2": {
          "name": "punctuation.separator.dependencies"
        },
        "3": {
          "name": "invalid.illegal.dependencies.punctuation"
        }
      }
    },
    "dependenciesEntry": {
      "match": "(Dependencies:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.dependencies",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "name": "meta.section.dependencies",
          "patterns": [
            {
              "include": "#dependencies"
            }
          ]
        }
      }
    },
    "entryLine": {
      "match": "^\\s{2}([\\S^:#][^:#]+[^#]*)$",
      "captures": {
        "1": {
          "name": "meta.block.entry.task",
          "patterns": [
            {
              "include": "#annotationEntry"
            },
            {
              "include": "#dependenciesEntry"
            },
            {
              "include": "#idEntry"
            },
            {
              "include": "#parentEntry"
            },
            {
              "include": "#statusEntry"
            },
            {
              "include": "#tagsEntry"
            },
            {
              "include": "#uuidEntry"
            },
            {
              "include": "#genericEntry"
            },
            {
              "match": ".*",
              "name": "invalid.illegal.entry.task"
            }
          ]
        }
      }
    },
    "genericEntry": {
      "match": "([\\S^:#][^:#]+\\s*:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "name": "meta.string.value",
          "patterns": [
            {
              "include": "#stringValue"
            }
          ]
        }
      }
    },
    "heading": {
      "match": "^((#)\\s+((-+)|Name)\\s+((-+)|Editable details))$",
      "captures": {
        "1": {
          "name": "comment.line.with.heading.task"
        },
        "2": {
          "name": "punctuation.definition.comment.task"
        },
        "3": {
          "name": "markup.heading.name"
        },
        "4": {
          "name": "punctuation.separator.heading.name"
        },
        "5": {
          "name": "markup.heading.details"
        },
        "6": {
          "name": "punctuation.separator.heading.details"
        }
      }
    },
    "idEntry": {
      "match": "(ID:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.id",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "match": ".*\\D.*",
              "name": "invalid.illegal.integer.decimal"
            },
            {
              "match": ".*",
              "name": "constant.numeric.integer.decimal.id"
            }
          ]
        }
      }
    },
    "idRange": {
      "match": "(?<!\\d)(\\d{1,7})(?!\\d)(?:(-)(?:(.{8,})|(?=.))|(.*))",
      "captures": {
        "1": {
          "name": "constant.numeric.integer.decimal.id"
        },
        "2": {
          "name": "keyword.operator.range"
        },
        "3": {
          "name": "invalid.illegal.integer.decimal"
        },
        "4": {
          "name": "invalid.illegal.dependencies.part"
        }
      }
    },
    "invalidIndentation": {
      "match": "(^\\s?[^#\\s][^:]*)|((?<=^\\s{2})\\P{Word}+)",
      "name": "invalid.illegal.indentation.task"
    },
    "missingSeparator": {
      "match": "(^[^:#]+(?=#))|(^[^:#]+$)",
      "name": "invalid.illegal.missing.separator.task"
    },
    "parentEntry": {
      "match": "(Parent:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.parent.uuid",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#uuid"
            },
            {
              "match": ".*",
              "name": "invalid.illegal.uuid"
            }
          ]
        }
      }
    },
    "statusEntry": {
      "match": "(Status:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.status",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "match": "Pending|Recurring|Waiting|Completed|Deleted",
              "name": "variable.other.enummember.status"
            },
            {
              "match": ".*",
              "name": "invalid.illegal.status"
            }
          ]
        }
      }
    },
    "stringValue": {
      "match": ".*",
      "name": "string.unquoted.value"
    },
    "tags": {
      "match": "(\\S+)\\s*",
      "captures": {
        "1": {
          "name": "entity.name.tag"
        }
      }
    },
    "tagsEntry": {
      "match": "(Tags:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.tags",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "name": "meta.section.tags",
          "patterns": [
            {
              "include": "#tags"
            }
          ]
        }
      }
    },
    "timestamp": {
      "patterns": [
        {
          "match": "\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}",
          "name": "meta.embedded.timestamp"
        },
        {
          "match": ".*",
          "name": "invalid.illegal.timestamp"
        }
      ]
    },
    "uuid": {
      "match": "\\h{8}-(?:\\h{4}-){3}\\h{12}",
      "name": "string.unquoted.uuid"
    },
    "uuidEntry": {
      "match": "(UUID:)\\s*(.*)",
      "captures": {
        "1": {
          "name": "meta.section.key.uuid",
          "patterns": [
            {
              "include": "#attributeKeySection"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#uuid"
            },
            {
              "match": ".*",
              "name": "invalid.illegal.uuid"
            }
          ]
        }
      }
    },
    "uuidRef": {
      "match": "\\h{8}(?:[\\h-]{4,28})?",
      "name": "string.unquoted.uuid.ref"
    }
  }
}
